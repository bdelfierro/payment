main:
  params: [event]
  steps:
    - init:
        assign:
          - project: '${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}'
          - topic: cart_notification
          - secret_id_payment_api: "gke-cloud-sql-secrets"
          - secret_id_payment_cart_api: "payment-cart-api"
    - decodePubSubMessage:
        assign:
          - triggerMsg: ${json.decode(base64.decode(event.data.message.data))}
    - getCartID:
        assign:
          - cartID: ${triggerMsg.data.object.client_reference_id}
    - accessPaymentApiSecret:
        call: googleapis.secretmanager.v1.projects.secrets.versions.accessBytes
        args:
          secret_id: ${secret_id_payment_cart_api}
          project_id: ${project}
        result: payment_cart_secret
    - updateCartStatus:
        try:
          call: http.post
          args:
            url: '${json.decode(payment_cart_secret).endpoint + "/updateCartStatus"}'
            body:
              cartID: ${cartID}
              status: "PAID"
          result: payment_cart_response
        except:
          as: e
          steps:
            - unhandled_exception:
                raise: ${e}
    - publish_message_to_topic:
        call: googleapis.pubsub.v1.projects.topics.publish
        args:
          topic: '${"projects/" + project + "/topics/" + topic}'
          body:
            messages:
              - data: '${event.data.message.data}'
    - returnValue:
        return: ${payment_cart_response}